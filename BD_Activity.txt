1. Crear una base de datos llamada 'call_list'
CREATE DATABASE call_list WITH OWNER desafiodev;

2. En la base de datos recien creada, crear la tabla users con los campos id (clave primaria), first_name, email.
CREATE TABLE users(id SMALLSERIAL PRIMARY KEY, first_name VARCHAR(64), email VARCHAR(64));

3. Ingresar un usuario, llamado Carlos (el resto de los datos deben inventarlos).
INSERT INTO users (first_name, email) VALUES ( 'Carlos', 'carlos@email.com' );

4. Ingresar un usuario, llamada Laura (el resto de los datos deben inventarlos).
INSERT INTO users (first_name, email) VALUES ( 'Laura', 'laura@email.com' );

5. Crear una tabla llamada calls con los campos id (clave primaria), phone, date, user_id (foreign key relacionado a users).
CREATE TABLE calls(id SMALLSERIAL PRIMARY KEY, phone INTEGER, date DATE, user_id SMALLINT REFERENCES users(id));

6. Agregar a la tabla users el campo last_name.
ALTER TABLE users ADD COLUMN last_name varchar(64);

7. Ingresar el apellido del usuario Carlos.
UPDATE users SET last_name = 'Olmos' WHERE first_name = 'Carlos';

8. Ingresar el apellido del usuario Laura.
UPDATE users SET last_name = 'Soto' WHERE first_name = 'Laura';

9. Ingresar 6 llamadas asociadas al usuario Laura.
INSERT INTO calls (phone, user_id) VALUES (932267138, 2), (945763829, 2), (987345674, 2), (923657238, 2), (908759473, 2), (946758873, 2);

10. Ingresar 4 llamadas asociadas al usuario Carlos.
INSERT INTO calls (phone, user_id) VALUES (911263748, 1), (999857683, 1), (966847756, 1), (932749958, 1);

11. Crear un nuevo usuario.
INSERT INTO users (first_name, email, last_name) VALUES ('Josefina', 'josefina@email.com', 'Olmos');

12. Seleccionar la cantidad de llamados de cada uno de los usuarios (nombre de usuario y cantidad de llamadas).
SELECT usr.first_name, COUNT (clls.phone) FROM users as usr JOIN calls as clls ON (usr.id = clls.user_id) GROUP BY usr.first_name;

13. Seleccionar los llamados del usuario llamado Carlos ordenados por fecha en orden descendente.
SELECT usr.first_name, clls.phone FROM users as usr JOIN calls as clls ON (usr.id = clls.user_id) GROUP BY usr.first_name, clls.phone, clls.date ORDER BY clls.date DESC;

14. Nuevos cambios solicitados por cliente.
"Necesito agregar a la base una tabla de auditoría que registre el motivo del borrado de una llamada y el usuario que lo efectuó."
CREATE TABLE auditoria (descripcion VARCHAR (300), user_id SMALLINT REFERENCES users(id), call_id SMALLINT REFERENCES calls(id));

Participante: Manuel Olmos